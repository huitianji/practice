---gulp-api--

npm init ===> package.json
cat 文件名字

安装gulp
npm install gulp -g
npm install gulp --save-dev
---

gulp <task> <othertask>

{
    gulpfile.js  ->  gulpfile1.js
    gulp --gulpfile gulpfile1.js
}

执行
history/gulpfile.js
{
    gulp --gulpfile history/gulpfile.js
    gulp hello --cwd history
}

-T
gulp -T hello --cwd history

---api---

gulp.task(),gulp.src(),gulp.dest(),gulp.watch();

------
压缩---Virtual file format
Vinyl
gulpjs/vinyl
-------------------------------【gulp-插件介绍】-----------------------------------
插件介绍：
    -。- 编译sass:gulp-sass
    -。-编译less:gulp-less
    -。-合并文件 ：gulp-concat
    -。-压缩js文件：gulp-uglify
    -。-重命名js文件：gulp-rename
    -。-优化图像大小：gulp-imagemin
    -。-压缩css 文件：gulp-minify-css
    -。-创建本地服务器：gulp-connect
    -。-实时预览：gulp-connect

    -。-合成雪碧图：gulp-sprite

    --。 html文件压缩:gulp-minify-html     用法：minifyHtml()

    --。 代码检查  gulp-jshint





使用插件
    1.npm install xx --save-dev
    2.在gulpfile.js顶部插入此插件
    3.在创建任务的时候使用此插件

**-**
gulp-load-plugins这个插件能自动帮你加载package.json文件里面的gulp插件。

然后我们可以在gulpfile.js中使用gulp-load-plugins来帮我们加载插件：

var gulp = require("gulp");
//加载gulp-load-plugins插件，并马上运行它
var $ = require('gulp-load-plugins')();

然后我们要使用gulp-rename和gulp-ruby-sass这两个插件的时候，
就可以使用$.concat 和$.connect来代替了，有就是原始插件名去掉gulp-前缀，之后在转换为驼峰命名

** 安装   npm install gulp-load-plugins --save-dev
**        npm install gulp-less --save-dev
**        npm install gulp-connect --save-dev
**        npm install gulp-uglify --save-dev    //压缩js文件

----gulp-connect
有些时候我们需要把文件放到本地服务器上去预览，gulp-connect可以帮助我们创建一个本地服务器去运行我们的项目

【我们希望当文件变化的时候浏览器可以自动刷新，这样我们就不需要文件修改后手动去刷新浏览器了】

代码：
var gulp = require('gulp');
var connect = require("gulp-connect");
gulp.task('copy-html',function(){
    gulp.src('app/index.html')//指定源文件
        .pipe(gulp.dest('dist'))//拷贝到dist目录
        .pipe(connect.reload())//通知浏览器重启
});
gulp.task('watch',function(){
    gulp.watch('app/index.html',['copy-html']);//当index.html文件变化时执行copy-html任务

});
gulp.task('server',function(){
    connect.server({
        root:'dist',//服务器的根目录
        port:8080,//服务器地址，没有此配置项默认也是 8080
        livereload:true//启用实时刷新的功能
    });
});
gulp.task('default',['server','watch']);//运行此任务的时候会在8080上启动服务器


-----------------------------
*********----****
rename(function(path){
    path.dirname += './';//目录
    path.basename += '.min.';//文件名   .min.
    path.extname = '.css';//扩展名
})

****--图片压缩--****
**安装  npm install gulp-imagemin --save-dev

gulp.src('app/images/**/*.{jpg,png}');//指定要压缩的图片

gulp.task('copy-images',function(){
    return gulp.src('app/images/**/*.{jpg,png}'),//指定要压缩的图片
                .pipe(imagemin())//进行图片压缩
                .pipe(gulp.dest('dist'));//输出目的地
});

****-代码检查--****
***  npm install gulp-jshint --save-dev
gulp.task('jsLint',function(){
    gulp.src('src/*.js')
        .pipe(jshint())//进行代码检查
        .pipe(jshint.reporter());//输出检查结果
});


****-合成雪碧图-****
*** npm install gulp-sprite --save-dev


var gulp = require('gulp');
var sprite = require('gulp-sprite');

gulp.task('sprites', function () {
    gulp.src('./src/img/*.png')
      .pipe(sprite('sprites.png', {
        imagePath: 'dist/img',
        cssPath: './src/scss/utils/',
        preprocessor: 'scss'
      }))
      .pipe(gulp.dest('./dist/img/'));
});

-----------------------------【认识yeoman】-------------------------------------
npm install -g yo

mkdir gulpdemo
cd gulpdemo
npm install -g generator-gulp-webapp  // es5->generator-gulp-webapp@0.2.0   //生成器
yo gulp-webapp gulpdemo

